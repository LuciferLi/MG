// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ResponseResult.pb.h"
// @@protoc_insertion_point(imports)

@implementation ResponseResultRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ResponseResultRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ResponseResult ()
@property SInt32 code;
@property SInt32 internalCode;
@property (strong) NSString* message;
@property (strong) NSString* debugMessage;
@end

@implementation ResponseResult

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasInternalCode {
  return !!hasInternalCode_;
}
- (void) setHasInternalCode:(BOOL) _value_ {
  hasInternalCode_ = !!_value_;
}
@synthesize internalCode;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) _value_ {
  hasMessage_ = !!_value_;
}
@synthesize message;
- (BOOL) hasDebugMessage {
  return !!hasDebugMessage_;
}
- (void) setHasDebugMessage:(BOOL) _value_ {
  hasDebugMessage_ = !!_value_;
}
@synthesize debugMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = 0;
    self.internalCode = 0;
    self.message = @"";
    self.debugMessage = @"";
  }
  return self;
}
static ResponseResult* defaultResponseResultInstance = nil;
+ (void) initialize {
  if (self == [ResponseResult class]) {
    defaultResponseResultInstance = [[ResponseResult alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultResponseResultInstance;
}
- (instancetype) defaultInstance {
  return defaultResponseResultInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeInt32:1 value:self.code];
  }
  if (self.hasInternalCode) {
    [output writeInt32:2 value:self.internalCode];
  }
  if (self.hasMessage) {
    [output writeString:3 value:self.message];
  }
  if (self.hasDebugMessage) {
    [output writeString:4 value:self.debugMessage];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeInt32Size(1, self.code);
  }
  if (self.hasInternalCode) {
    size_ += computeInt32Size(2, self.internalCode);
  }
  if (self.hasMessage) {
    size_ += computeStringSize(3, self.message);
  }
  if (self.hasDebugMessage) {
    size_ += computeStringSize(4, self.debugMessage);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ResponseResult*) parseFromData:(NSData*) data {
  return (ResponseResult*)[[[ResponseResult builder] mergeFromData:data] build];
}
+ (ResponseResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResponseResult*)[[[ResponseResult builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResponseResult*) parseFromInputStream:(NSInputStream*) input {
  return (ResponseResult*)[[[ResponseResult builder] mergeFromInputStream:input] build];
}
+ (ResponseResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResponseResult*)[[[ResponseResult builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResponseResult*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResponseResult*)[[[ResponseResult builder] mergeFromCodedInputStream:input] build];
}
+ (ResponseResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResponseResult*)[[[ResponseResult builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResponseResultBuilder*) builder {
  return [[ResponseResultBuilder alloc] init];
}
+ (ResponseResultBuilder*) builderWithPrototype:(ResponseResult*) prototype {
  return [[ResponseResult builder] mergeFrom:prototype];
}
- (ResponseResultBuilder*) builder {
  return [ResponseResult builder];
}
- (ResponseResultBuilder*) toBuilder {
  return [ResponseResult builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", [NSNumber numberWithInteger:self.code]];
  }
  if (self.hasInternalCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"internalCode", [NSNumber numberWithInteger:self.internalCode]];
  }
  if (self.hasMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"message", self.message];
  }
  if (self.hasDebugMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"debugMessage", self.debugMessage];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: [NSNumber numberWithInteger:self.code] forKey: @"code"];
  }
  if (self.hasInternalCode) {
    [dictionary setObject: [NSNumber numberWithInteger:self.internalCode] forKey: @"internalCode"];
  }
  if (self.hasMessage) {
    [dictionary setObject: self.message forKey: @"message"];
  }
  if (self.hasDebugMessage) {
    [dictionary setObject: self.debugMessage forKey: @"debugMessage"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ResponseResult class]]) {
    return NO;
  }
  ResponseResult *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || self.code == otherMessage.code) &&
      self.hasInternalCode == otherMessage.hasInternalCode &&
      (!self.hasInternalCode || self.internalCode == otherMessage.internalCode) &&
      self.hasMessage == otherMessage.hasMessage &&
      (!self.hasMessage || [self.message isEqual:otherMessage.message]) &&
      self.hasDebugMessage == otherMessage.hasDebugMessage &&
      (!self.hasDebugMessage || [self.debugMessage isEqual:otherMessage.debugMessage]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.code] hash];
  }
  if (self.hasInternalCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.internalCode] hash];
  }
  if (self.hasMessage) {
    hashCode = hashCode * 31 + [self.message hash];
  }
  if (self.hasDebugMessage) {
    hashCode = hashCode * 31 + [self.debugMessage hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ResponseResultBuilder()
@property (strong) ResponseResult* resultResponseResult;
@end

@implementation ResponseResultBuilder
@synthesize resultResponseResult;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultResponseResult = [[ResponseResult alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultResponseResult;
}
- (ResponseResultBuilder*) clear {
  self.resultResponseResult = [[ResponseResult alloc] init];
  return self;
}
- (ResponseResultBuilder*) clone {
  return [ResponseResult builderWithPrototype:resultResponseResult];
}
- (ResponseResult*) defaultInstance {
  return [ResponseResult defaultInstance];
}
- (ResponseResult*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResponseResult*) buildPartial {
  ResponseResult* returnMe = resultResponseResult;
  self.resultResponseResult = nil;
  return returnMe;
}
- (ResponseResultBuilder*) mergeFrom:(ResponseResult*) other {
  if (other == [ResponseResult defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasInternalCode) {
    [self setInternalCode:other.internalCode];
  }
  if (other.hasMessage) {
    [self setMessage:other.message];
  }
  if (other.hasDebugMessage) {
    [self setDebugMessage:other.debugMessage];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResponseResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResponseResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCode:[input readInt32]];
        break;
      }
      case 16: {
        [self setInternalCode:[input readInt32]];
        break;
      }
      case 26: {
        [self setMessage:[input readString]];
        break;
      }
      case 34: {
        [self setDebugMessage:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultResponseResult.hasCode;
}
- (SInt32) code {
  return resultResponseResult.code;
}
- (ResponseResultBuilder*) setCode:(SInt32) value {
  resultResponseResult.hasCode = YES;
  resultResponseResult.code = value;
  return self;
}
- (ResponseResultBuilder*) clearCode {
  resultResponseResult.hasCode = NO;
  resultResponseResult.code = 0;
  return self;
}
- (BOOL) hasInternalCode {
  return resultResponseResult.hasInternalCode;
}
- (SInt32) internalCode {
  return resultResponseResult.internalCode;
}
- (ResponseResultBuilder*) setInternalCode:(SInt32) value {
  resultResponseResult.hasInternalCode = YES;
  resultResponseResult.internalCode = value;
  return self;
}
- (ResponseResultBuilder*) clearInternalCode {
  resultResponseResult.hasInternalCode = NO;
  resultResponseResult.internalCode = 0;
  return self;
}
- (BOOL) hasMessage {
  return resultResponseResult.hasMessage;
}
- (NSString*) message {
  return resultResponseResult.message;
}
- (ResponseResultBuilder*) setMessage:(NSString*) value {
  resultResponseResult.hasMessage = YES;
  resultResponseResult.message = value;
  return self;
}
- (ResponseResultBuilder*) clearMessage {
  resultResponseResult.hasMessage = NO;
  resultResponseResult.message = @"";
  return self;
}
- (BOOL) hasDebugMessage {
  return resultResponseResult.hasDebugMessage;
}
- (NSString*) debugMessage {
  return resultResponseResult.debugMessage;
}
- (ResponseResultBuilder*) setDebugMessage:(NSString*) value {
  resultResponseResult.hasDebugMessage = YES;
  resultResponseResult.debugMessage = value;
  return self;
}
- (ResponseResultBuilder*) clearDebugMessage {
  resultResponseResult.hasDebugMessage = NO;
  resultResponseResult.debugMessage = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
