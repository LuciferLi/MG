// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProvinceModel.pb.h"
// @@protoc_insertion_point(imports)

@implementation ProvinceModelRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ProvinceModelRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [CityModelRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ProvinceModel ()
@property SInt32 provinceId;
@property (strong) NSString* provinceName;
@property (strong) NSMutableArray * cityListArray;
@end

@implementation ProvinceModel

- (BOOL) hasProvinceId {
  return !!hasProvinceId_;
}
- (void) setHasProvinceId:(BOOL) _value_ {
  hasProvinceId_ = !!_value_;
}
@synthesize provinceId;
- (BOOL) hasProvinceName {
  return !!hasProvinceName_;
}
- (void) setHasProvinceName:(BOOL) _value_ {
  hasProvinceName_ = !!_value_;
}
@synthesize provinceName;
@synthesize cityListArray;
@dynamic cityList;
- (instancetype) init {
  if ((self = [super init])) {
    self.provinceId = 0;
    self.provinceName = @"";
  }
  return self;
}
static ProvinceModel* defaultProvinceModelInstance = nil;
+ (void) initialize {
  if (self == [ProvinceModel class]) {
    defaultProvinceModelInstance = [[ProvinceModel alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultProvinceModelInstance;
}
- (instancetype) defaultInstance {
  return defaultProvinceModelInstance;
}
- (NSArray *)cityList {
  return cityListArray;
}
- (CityModel*)cityListAtIndex:(NSUInteger)index {
  return [cityListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProvinceId) {
    [output writeInt32:1 value:self.provinceId];
  }
  if (self.hasProvinceName) {
    [output writeString:2 value:self.provinceName];
  }
  [self.cityListArray enumerateObjectsUsingBlock:^(CityModel *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasProvinceId) {
    size_ += computeInt32Size(1, self.provinceId);
  }
  if (self.hasProvinceName) {
    size_ += computeStringSize(2, self.provinceName);
  }
  [self.cityListArray enumerateObjectsUsingBlock:^(CityModel *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProvinceModel*) parseFromData:(NSData*) data {
  return (ProvinceModel*)[[[ProvinceModel builder] mergeFromData:data] build];
}
+ (ProvinceModel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProvinceModel*)[[[ProvinceModel builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProvinceModel*) parseFromInputStream:(NSInputStream*) input {
  return (ProvinceModel*)[[[ProvinceModel builder] mergeFromInputStream:input] build];
}
+ (ProvinceModel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProvinceModel*)[[[ProvinceModel builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProvinceModel*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProvinceModel*)[[[ProvinceModel builder] mergeFromCodedInputStream:input] build];
}
+ (ProvinceModel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProvinceModel*)[[[ProvinceModel builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProvinceModelBuilder*) builder {
  return [[ProvinceModelBuilder alloc] init];
}
+ (ProvinceModelBuilder*) builderWithPrototype:(ProvinceModel*) prototype {
  return [[ProvinceModel builder] mergeFrom:prototype];
}
- (ProvinceModelBuilder*) builder {
  return [ProvinceModel builder];
}
- (ProvinceModelBuilder*) toBuilder {
  return [ProvinceModel builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasProvinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"provinceId", [NSNumber numberWithInteger:self.provinceId]];
  }
  if (self.hasProvinceName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"provinceName", self.provinceName];
  }
  [self.cityListArray enumerateObjectsUsingBlock:^(CityModel *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"cityList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasProvinceId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.provinceId] forKey: @"provinceId"];
  }
  if (self.hasProvinceName) {
    [dictionary setObject: self.provinceName forKey: @"provinceName"];
  }
  for (CityModel* element in self.cityListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"cityList"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProvinceModel class]]) {
    return NO;
  }
  ProvinceModel *otherMessage = other;
  return
      self.hasProvinceId == otherMessage.hasProvinceId &&
      (!self.hasProvinceId || self.provinceId == otherMessage.provinceId) &&
      self.hasProvinceName == otherMessage.hasProvinceName &&
      (!self.hasProvinceName || [self.provinceName isEqual:otherMessage.provinceName]) &&
      [self.cityListArray isEqualToArray:otherMessage.cityListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasProvinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.provinceId] hash];
  }
  if (self.hasProvinceName) {
    hashCode = hashCode * 31 + [self.provinceName hash];
  }
  [self.cityListArray enumerateObjectsUsingBlock:^(CityModel *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProvinceModelBuilder()
@property (strong) ProvinceModel* resultProvinceModel;
@end

@implementation ProvinceModelBuilder
@synthesize resultProvinceModel;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultProvinceModel = [[ProvinceModel alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultProvinceModel;
}
- (ProvinceModelBuilder*) clear {
  self.resultProvinceModel = [[ProvinceModel alloc] init];
  return self;
}
- (ProvinceModelBuilder*) clone {
  return [ProvinceModel builderWithPrototype:resultProvinceModel];
}
- (ProvinceModel*) defaultInstance {
  return [ProvinceModel defaultInstance];
}
- (ProvinceModel*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProvinceModel*) buildPartial {
  ProvinceModel* returnMe = resultProvinceModel;
  self.resultProvinceModel = nil;
  return returnMe;
}
- (ProvinceModelBuilder*) mergeFrom:(ProvinceModel*) other {
  if (other == [ProvinceModel defaultInstance]) {
    return self;
  }
  if (other.hasProvinceId) {
    [self setProvinceId:other.provinceId];
  }
  if (other.hasProvinceName) {
    [self setProvinceName:other.provinceName];
  }
  if (other.cityListArray.count > 0) {
    if (resultProvinceModel.cityListArray == nil) {
      resultProvinceModel.cityListArray = [[NSMutableArray alloc] initWithArray:other.cityListArray];
    } else {
      [resultProvinceModel.cityListArray addObjectsFromArray:other.cityListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProvinceModelBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProvinceModelBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setProvinceId:[input readInt32]];
        break;
      }
      case 18: {
        [self setProvinceName:[input readString]];
        break;
      }
      case 26: {
        CityModelBuilder* subBuilder = [CityModel builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCityList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasProvinceId {
  return resultProvinceModel.hasProvinceId;
}
- (SInt32) provinceId {
  return resultProvinceModel.provinceId;
}
- (ProvinceModelBuilder*) setProvinceId:(SInt32) value {
  resultProvinceModel.hasProvinceId = YES;
  resultProvinceModel.provinceId = value;
  return self;
}
- (ProvinceModelBuilder*) clearProvinceId {
  resultProvinceModel.hasProvinceId = NO;
  resultProvinceModel.provinceId = 0;
  return self;
}
- (BOOL) hasProvinceName {
  return resultProvinceModel.hasProvinceName;
}
- (NSString*) provinceName {
  return resultProvinceModel.provinceName;
}
- (ProvinceModelBuilder*) setProvinceName:(NSString*) value {
  resultProvinceModel.hasProvinceName = YES;
  resultProvinceModel.provinceName = value;
  return self;
}
- (ProvinceModelBuilder*) clearProvinceName {
  resultProvinceModel.hasProvinceName = NO;
  resultProvinceModel.provinceName = @"";
  return self;
}
- (NSMutableArray *)cityList {
  return resultProvinceModel.cityListArray;
}
- (CityModel*)cityListAtIndex:(NSUInteger)index {
  return [resultProvinceModel cityListAtIndex:index];
}
- (ProvinceModelBuilder *)addCityList:(CityModel*)value {
  if (resultProvinceModel.cityListArray == nil) {
    resultProvinceModel.cityListArray = [[NSMutableArray alloc]init];
  }
  [resultProvinceModel.cityListArray addObject:value];
  return self;
}
- (ProvinceModelBuilder *)setCityListArray:(NSArray *)array {
  resultProvinceModel.cityListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (ProvinceModelBuilder *)clearCityList {
  resultProvinceModel.cityListArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
